// <auto-generated />
using System;
using ConferencesManagementDAO.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConferencesManagementAPI.Migrations
{
    [DbContext(typeof(ConferenceManagementDbContext))]
    partial class ConferenceManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.Conference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("HostBy")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Conferen__3214EC07AFBF0F38");

                    b.HasIndex("HostBy");

                    b.ToTable("Conferences");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.ConferenceHostingRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RegisterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.HasKey("Id")
                        .HasName("PK__Conferen__3214EC0743A55694");

                    b.HasIndex("RegisterId");

                    b.ToTable("ConferenceHostingRegistration", (string)null);
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.ConferenceRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Conferen__3214EC07910A345E");

                    b.HasIndex(new[] { "Name" }, "UQ__Conferen__737584F6F6FDD6D5")
                        .IsUnique();

                    b.ToTable("ConferenceRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ban tổ chức"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Diễn giả"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Khách mời"
                        });
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.DelegateConferenceRole", b =>
                {
                    b.Property<int>("DelegateId")
                        .HasColumnType("int");

                    b.Property<int>("ConferenceId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("DelegateId", "ConferenceId", "RoleId")
                        .HasName("PK__Delegate__3E19E032B684A715");

                    b.HasIndex("ConferenceId");

                    b.HasIndex("RoleId");

                    b.ToTable("DelegateConferenceRoles");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.Delegates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Biography")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("IsConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Organization")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Delegate__3214EC077DD59054");

                    b.HasIndex(new[] { "Email" }, "UQ__Delegate__A9D105347AA945E4")
                        .IsUnique();

                    b.ToTable("Delegates");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Biography = "A passionate software engineer with over 5 years of experience in .NET development.",
                            CreatedAt = new DateTime(2025, 3, 7, 18, 30, 29, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(2001, 7, 15),
                            Email = "admin@example.com",
                            FullName = "Admin",
                            Gender = "Male",
                            IsConfirmed = true,
                            Organization = "CM",
                            PasswordHash = "$2a$11$zpU6itqMV2Pln7ltFIbBKuHx7EZYgzfbMiGx660rCSJ9Hspdia5t2",
                            Phone = "0374567952",
                            Position = "Admin"
                        },
                        new
                        {
                            Id = 10,
                            Address = "123 Hoàn Kiếm, Hà Nội, Vietnam",
                            Biography = "A passionate software engineer with over 5 years of experience in .NET development.",
                            CreatedAt = new DateTime(2025, 3, 8, 3, 5, 43, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1993, 7, 15),
                            Email = "duyb2@example.com",
                            FullName = "Duy Binh",
                            Gender = "Male",
                            IsConfirmed = true,
                            Nationality = "Vietnam",
                            Organization = "FPT Software",
                            PassportNumber = "A1234567",
                            PasswordHash = "$2a$11$/.qwjxNLQQWw/ozh5JYKRO77YxhTrDq0ao7PGHxmVEGhvEZO3.2vy",
                            Phone = "023434141",
                            Position = "Software Engineer"
                        },
                        new
                        {
                            Id = 40,
                            Address = "HN",
                            CreatedAt = new DateTime(2025, 3, 11, 14, 33, 35, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(2001, 1, 23),
                            Email = "trungtop@gmail.com",
                            FullName = "Trung Top",
                            Gender = "Male",
                            IsConfirmed = true,
                            Nationality = "Viet Nam",
                            Organization = "FPTU",
                            PasswordHash = "$2a$11$W6qQPUmqKMEZKhBQg/NEDusyY7d8xJ8GoXPlz21mAQ8g8sTGtv40.",
                            Phone = "0374567952",
                            Position = "BE"
                        },
                        new
                        {
                            Id = 41,
                            Address = "HN",
                            CreatedAt = new DateTime(2025, 3, 11, 14, 42, 25, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(2001, 3, 16),
                            Email = "trungtop2@gmail.com",
                            FullName = "Trung Top 2",
                            Gender = "Male",
                            IsConfirmed = true,
                            Nationality = "VN",
                            Organization = "FPTU",
                            PasswordHash = "$2a$11$L5Ame2hdA7p1nLI5LzVvZu8IYcY1MWOHD55x9S7LijDr8kBYWJJGy",
                            Phone = "012345678",
                            Position = "BE"
                        });
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConferenceId")
                        .HasColumnType("int");

                    b.Property<int>("DelegateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegisteredAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.HasKey("Id")
                        .HasName("PK__Registra__3214EC07B791C336");

                    b.HasIndex("ConferenceId");

                    b.HasIndex("DelegateId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.SystemRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__SystemRo__3214EC077662D07F");

                    b.HasIndex(new[] { "Name" }, "UQ__SystemRo__737584F668A83EC4")
                        .IsUnique();

                    b.ToTable("SystemRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Delegates"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("DelegateSystemRole", b =>
                {
                    b.Property<int>("DelegateId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("DelegateId", "RoleId")
                        .HasName("PK__Delegate__B995E94AE480C135");

                    b.HasIndex("RoleId");

                    b.ToTable("DelegateSystemRoles", (string)null);
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.Conference", b =>
                {
                    b.HasOne("ConferencesManagementDAO.Data.Entities.Delegates", "HostByNavigation")
                        .WithMany("Conferences")
                        .HasForeignKey("HostBy");

                    b.Navigation("HostByNavigation");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.ConferenceHostingRegistration", b =>
                {
                    b.HasOne("ConferencesManagementDAO.Data.Entities.Delegates", "Register")
                        .WithMany("ConferenceHostingRegistrations")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Conferenc__Regis__4AB81AF0");

                    b.Navigation("Register");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.DelegateConferenceRole", b =>
                {
                    b.HasOne("ConferencesManagementDAO.Data.Entities.Conference", "Conference")
                        .WithMany("DelegateConferenceRoles")
                        .HasForeignKey("ConferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DelegateC__Confe__37A5467C");

                    b.HasOne("ConferencesManagementDAO.Data.Entities.Delegates", "Delegate")
                        .WithMany("DelegateConferenceRoles")
                        .HasForeignKey("DelegateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DelegateC__Deleg__38996AB5");

                    b.HasOne("ConferencesManagementDAO.Data.Entities.ConferenceRole", "Role")
                        .WithMany("DelegateConferenceRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DelegateC__RoleI__398D8EEE");

                    b.Navigation("Conference");

                    b.Navigation("Delegate");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.Registration", b =>
                {
                    b.HasOne("ConferencesManagementDAO.Data.Entities.Conference", "Conference")
                        .WithMany("Registrations")
                        .HasForeignKey("ConferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Registrat__Confe__3C69FB99");

                    b.HasOne("ConferencesManagementDAO.Data.Entities.Delegates", "Delegate")
                        .WithMany("Registrations")
                        .HasForeignKey("DelegateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Registrat__Deleg__3D5E1FD2");

                    b.Navigation("Conference");

                    b.Navigation("Delegate");
                });

            modelBuilder.Entity("DelegateSystemRole", b =>
                {
                    b.HasOne("ConferencesManagementDAO.Data.Entities.Delegates", null)
                        .WithMany()
                        .HasForeignKey("DelegateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DelegateS__Deleg__3A81B327");

                    b.HasOne("ConferencesManagementDAO.Data.Entities.SystemRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DelegateS__RoleI__3B75D760");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.Conference", b =>
                {
                    b.Navigation("DelegateConferenceRoles");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.ConferenceRole", b =>
                {
                    b.Navigation("DelegateConferenceRoles");
                });

            modelBuilder.Entity("ConferencesManagementDAO.Data.Entities.Delegates", b =>
                {
                    b.Navigation("ConferenceHostingRegistrations");

                    b.Navigation("Conferences");

                    b.Navigation("DelegateConferenceRoles");

                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
